apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pdfding.fullname" . }}
  labels:
    {{- include "pdfding.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "pdfding.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "pdfding.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pdfding.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "pdfding.fullname" . }}
            {{- if .Values.pdfding.existingSecret }}
            - secretRef:
                name: {{ .Values.pdfding.existingSecret }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.pdfding.config.hostPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/healthz"
              port: {{ .Values.pdfding.config.hostPort }}
              httpHeaders:
                - name: Host
                  value: {{ .Values.pdfding.config.hostName | quote }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          readinessProbe:
            httpGet:
              path: "/healthz"
              port: {{ .Values.pdfding.config.hostPort }}
              httpHeaders:
                - name: Host
                  value: {{ .Values.pdfding.config.hostName | quote }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.persistence.enabled .Values.containerSecurityContext.readOnlyRootFilesystem }}
          volumeMounts:
            {{- if not ( eq .Values.pdfding.config.database.type "POSTGRES" ) }}
            - name: db
              mountPath: /home/nonroot/pdfding/db
            {{- end }}
            - name: media
              mountPath: /home/nonroot/pdfding/media
            {{- if .Values.containerSecurityContext.readOnlyRootFilesystem }}
            - name: tmp
              mountPath: /tmp
            {{- end }}
          {{- end }}
      {{- if or .Values.persistence.enabled .Values.containerSecurityContext.readOnlyRootFilesystem }}
      volumes:
      {{- if .Values.persistence.enabled }}
        {{- if not ( eq .Values.pdfding.config.database.type "POSTGRES" ) }}
        - name: db
          persistentVolumeClaim:
            claimName: {{ include "pdfding.fullname" . }}-db
        {{- end }}
        - name: media
          persistentVolumeClaim:
            claimName: {{ include "pdfding.fullname" . }}-media
      {{- else if .Values.containerSecurityContext.readOnlyRootFilesystem }}
        {{- if not ( eq .Values.pdfding.config.database.type "POSTGRES" ) }}
        - name: db
          emptyDir: {}
        {{- end }}
        - name: media
          emptyDir: {}
      {{- end }}
      {{- if .Values.containerSecurityContext.readOnlyRootFilesystem }}
        - name: tmp
          emptyDir: {}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
